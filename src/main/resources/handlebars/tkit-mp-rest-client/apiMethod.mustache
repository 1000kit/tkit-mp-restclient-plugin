{{#apiInterfaceDoc}}
    @Operation(operationId = "{{{nickname}}}", description = "{{{notes}}}")
    @APIResponses(value = { {{#responses}}
        @APIResponse(responseCode = "{{{code}}}", description = "{{{message}}}"{{^vendorExtensions.x-java-is-response-void}},content = @Content({{#baseType}}schema = @Schema(implementation = {{{baseType}}}.class{{/baseType}}{{#containerType}}, type = SchemaType.ARRAY{{/containerType}})){{/vendorExtensions.x-java-is-response-void}}){{#hasMore}},{{/hasMore}}{{/responses}} }
    )
{{/apiInterfaceDoc}}
@{{httpMethod}}{{#subresourceOperation}}
    @Path("{{{path}}}"){{/subresourceOperation}}{{#hasConsumes}}
    @Consumes({ {{#consumes}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/consumes}} }){{/hasConsumes}}{{#hasProduces}}
    @Produces({ {{#produces}}"{{{mediaType}}}"{{#hasMore}}, {{/hasMore}}{{/produces}} }){{/hasProduces}}
{{#implRestClass}}public{{/implRestClass}}{{^implRestClass}}default{{/implRestClass}} {{#returnResponse}}Response{{/returnResponse}}{{^returnResponse}}{{>returnTypeInterface}}{{/returnResponse}} {{nickname}}(
{{^beanParam}}{{#parameters}}{{>queryParams}}{{>pathParams}}{{>headerParams}}{{>bodyParams}}{{>formParams}}{{#hasMore}},{{/hasMore}}{{/parameters}}{{/beanParam}}
{{#beanParam}}@BeanParam {{beanParamName}} beanParam{{#bodyParams}}, {{>bodyParams}}{{/bodyParams}}{{/beanParam}}) {
return Response.status(501).build();
}

{{#beanParam}}
    {{>beanParams}}
{{/beanParam}}